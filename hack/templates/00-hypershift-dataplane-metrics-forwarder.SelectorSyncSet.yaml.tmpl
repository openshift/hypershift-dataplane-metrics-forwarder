apiVersion: v1
kind: Template
metadata:
  name: hypershift-dataplane-metrics-forwarder-template
parameters:
  - name: REGISTRY_IMG
    required: true
  - name: IMAGE_DIGEST
    required: true
  - name: TELEMETER_SERVER_URL
    required: true
objects:
  - apiVersion: hive.openshift.io/v1
    kind: SelectorSyncSet
    metadata:
      name: dataplane-metrics-forwarder-hcp-policy
    spec:
      clusterDeploymentSelector:
        matchLabels:
          ext-hypershift.openshift.io/cluster-type: service-cluster
      resourceApplyMode: Sync
      resources:
        - apiVersion: policy.open-cluster-management.io/v1
          kind: Policy
          metadata:
            annotations:
              policy.open-cluster-management.io/categories: CM Configuration Management
              policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
              policy.open-cluster-management.io/standards: NIST SP 800-53
            name: metrics-forwarder
            namespace: openshift-acm-policies
          spec:
            disabled: false
            remediationAction: enforce
            policy-templates:
              - objectDefinition:
                  apiVersion: policy.open-cluster-management.io/v1
                  kind: ConfigurationPolicy
                  metadata:
                    name: metrics-forwarder
                  spec:
                    evaluationInterval:
                      compliant: 2m
                      noncompliant: 45s
                    namespaceSelector:
                      matchLabels:
                        hypershift.openshift.io/hosted-control-plane: "true"
                    object-templates:
                      - complianceType: MustHave
                        objectDefinition:
                          apiVersion: package-operator.run/v1alpha1
                          kind: Package
                          metadata:
                            name: metrics-forwarder
                          spec:
                            image: ${REGISTRY_IMG}@${IMAGE_DIGEST}
        - apiVersion: apps.open-cluster-management.io/v1
          kind: PlacementRule
          metadata:
            name: placement-metrics-forwarder
            namespace: openshift-acm-policies
          spec:
            clusterSelector:
              matchExpressions:
                - key: hypershift.open-cluster-management.io/management-cluster
                  operator: In
                  values:
                    - "true"
        - apiVersion: policy.open-cluster-management.io/v1
          kind: PlacementBinding
          metadata:
            name: binding-metrics-forwarder
            namespace: openshift-acm-policies
          placementRef:
            apiGroup: apps.open-cluster-management.io
            kind: PlacementRule
            name: placement-metrics-forwarder
          subjects:
            - apiGroup: policy.open-cluster-management.io
              kind: Policy
              name: metrics-forwarder
  - apiVersion: hive.openshift.io/v1
    kind: SelectorSyncSet
    metadata:
      name: dataplane-metrics-forwarder-hc-policy
    spec:
      clusterDeploymentSelector:
        matchLabels:
          ext-hypershift.openshift.io/cluster-type: service-cluster
      resourceApplyMode: Sync
      resources:
        - apiVersion: policy.open-cluster-management.io/v1
          kind: Policy
          metadata:
            annotations:
              policy.open-cluster-management.io/categories: CM Configuration Management
              policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
              policy.open-cluster-management.io/standards: NIST SP 800-53
            name: metrics-forwarder-config
            namespace: openshift-acm-policies
          spec:
            disabled: false
            remediationAction: enforce
            policy-templates:
              - objectDefinition:
                  apiVersion: policy.open-cluster-management.io/v1
                  kind: ConfigurationPolicy
                  metadata:
                    name: metrics-forwarder-config
                  spec:
                    evaluationInterval:
                      compliant: 15m
                      noncompliant: 45s
                    object-templates:
                      - complianceType: MustHave
                        objectDefinition:
                          apiVersion: v1
                          kind: ConfigMap
                          metadata:
                            name: cluster-monitoring-config
                            namespace: openshift-monitoring
                          data:
                            config.yaml: |
                              enableUserWorkload: true
                              prometheusK8s:
                                externalLabels:
                                  source: "DP"
                                remoteWrite:
                                  - url: {{ ( trimAll ":443" (( lookup "config.openshift.io/v1" "Infrastructure" "default" "cluster").status.apiServerInternalURI )) | replace "//api" "//metrics-forwarder.apps" }}
                                    remoteTimeout: 30s
                                    writeRelabelConfigs:
                                    - sourceLabels: [__tmp_openshift_cluster_id__]
                                      targetLabel: _id
                                      action: replace
                                    - sourceLabels: [__name__]
                                      regex: '(apiserver_request_duration_seconds_bucket|apiserver_request_duration_seconds_count|apiserver_request_total|kube_node_labels|cluster:capacity_cpu_cores:sum|cluster:capacity_memory_bytes:sum|cluster:memory_usage_bytes:sum|cluster:node_instance_type_count:sum|cluster:virt_platform_nodes:sum|console_url|kube_node_spec_unschedulable|kube_node_status_condition|node_role_os_version_machine:cpu_capacity_cores:sum|node_role_os_version_machine:cpu_capacity_cores:sum|node_role_os_version_machine:cpu_capacity_sockets:sum|up|probe_success)'
                                      action: keep
                                    queueConfig:
                                      capacity: 10000
                                      maxShards: 500
                                      minShards: 1
                                      maxSamplesPerSend: 2000
                                      batchSendDeadline: 60s
                                      minBackoff: 30ms
                                      maxBackoff: 30s
                                    tlsConfig:
                                      insecureSkipVerify: true
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                topologySpreadConstraints:
                                  - maxSkew: 1
                                    topologyKey: topology.kubernetes.io/zone
                                    whenUnsatisfiable: ScheduleAnyway
                                    labelSelector:
                                      matchLabels:
                                        app: prometheus
                                    nodeAffinityPolicy: Honor
                                    nodeTaintsPolicy: Honor
                                  - maxSkew: 2
                                    topologyKey: node-role.kubernetes.io/infra
                                    whenUnsatisfiable: ScheduleAnyway
                                    labelSelector:
                                      matchLabels:
                                        app: prometheus
                                    nodeAffinityPolicy: Honor
                                    nodeTaintsPolicy: Honor
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                                retention: 11d
                                retentionSize: 90GB
                                volumeClaimTemplate:
                                  metadata:
                                    name: prometheus-data
                                  spec:
                                    resources:
                                      requests:
                                        storage: 100Gi
                              alertmanagerMain:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                topologySpreadConstraints:
                                  - maxSkew: 1
                                    topologyKey: topology.kubernetes.io/zone
                                    whenUnsatisfiable: ScheduleAnyway
                                    labelSelector:
                                      matchLabels:
                                        app: prometheus
                                    nodeAffinityPolicy: Honor
                                    nodeTaintsPolicy: Honor
                                  - maxSkew: 2
                                    topologyKey: node-role.kubernetes.io/infra
                                    whenUnsatisfiable: ScheduleAnyway
                                    labelSelector:
                                      matchLabels:
                                        app: prometheus
                                    nodeAffinityPolicy: Honor
                                    nodeTaintsPolicy: Honor
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                              telemeterClient:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                                telemeterServerURL: ${TELEMETER_SERVER_URL}
                              prometheusOperator:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                              k8sPrometheusAdapter:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                              kubeStateMetrics:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                              openshiftStateMetrics:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                              thanosQuerier:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
        - apiVersion: apps.open-cluster-management.io/v1
          kind: PlacementRule
          metadata:
            name: placement-metrics-forwarder-config
            namespace: openshift-acm-policies
          spec:
            clusterSelector:
              matchExpressions:
                - key: hypershift.open-cluster-management.io/hosted-cluster
                  operator: In
                  values:
                    - "true"
                - key: ext-managed.openshift.io/uwm-disabled
                  operator: In
                  values:
                    - "false"
        - apiVersion: policy.open-cluster-management.io/v1
          kind: PlacementBinding
          metadata:
            name: binding-metrics-forwarder-config
            namespace: openshift-acm-policies
          placementRef:
            apiGroup: apps.open-cluster-management.io
            kind: PlacementRule
            name: placement-metrics-forwarder-config
          subjects:
            - apiGroup: policy.open-cluster-management.io
              kind: Policy
              name: metrics-forwarder-config
        - apiVersion: policy.open-cluster-management.io/v1
          kind: Policy
          metadata:
            annotations:
              policy.open-cluster-management.io/categories: CM Configuration Management
              policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
              policy.open-cluster-management.io/standards: NIST SP 800-53
            name: metrics-forwarder-config-non-uwm
            namespace: openshift-acm-policies
          spec:
            disabled: false
            remediationAction: enforce
            policy-templates:
              - objectDefinition:
                  apiVersion: policy.open-cluster-management.io/v1
                  kind: ConfigurationPolicy
                  metadata:
                    name: metrics-forwarder-config-non-uwm
                  spec:
                    evaluationInterval:
                      compliant: 15m
                      noncompliant: 45s
                    object-templates:
                      - complianceType: MustHave
                        objectDefinition:
                          apiVersion: v1
                          kind: ConfigMap
                          metadata:
                            name: cluster-monitoring-config
                            namespace: openshift-monitoring
                          data:
                            config.yaml: |
                              enableUserWorkload: false
                              prometheusK8s:
                                externalLabels:
                                  source: "DP"
                                replicas: 2
                                remoteWrite:
                                  - url: {{ ( trimAll ":443" (( lookup "config.openshift.io/v1" "Infrastructure" "default" "cluster").status.apiServerInternalURI )) | replace "//api" "//metrics-forwarder.apps" }}
                                    remoteTimeout: 30s
                                    writeRelabelConfigs:
                                    - sourceLabels: [__tmp_openshift_cluster_id__]
                                      targetLabel: _id
                                      action: replace
                                    - sourceLabels: [__name__]
                                      regex: '(apiserver_request_duration_seconds_bucket|apiserver_request_duration_seconds_count|apiserver_request_total|kube_node_labels|cluster:capacity_cpu_cores:sum|cluster:capacity_memory_bytes:sum|cluster:memory_usage_bytes:sum|cluster:node_instance_type_count:sum|cluster:virt_platform_nodes:sum|console_url|kube_node_spec_unschedulable|kube_node_status_condition|node_role_os_version_machine:cpu_capacity_cores:sum|node_role_os_version_machine:cpu_capacity_cores:sum|node_role_os_version_machine:cpu_capacity_sockets:sum|up|probe_success)'
                                      action: keep
                                    queueConfig:
                                      capacity: 10000
                                      maxShards: 500
                                      minShards: 1
                                      maxSamplesPerSend: 2000
                                      batchSendDeadline: 60s
                                      minBackoff: 30ms
                                      maxBackoff: 30s
                                    tlsConfig:
                                      insecureSkipVerify: true
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                topologySpreadConstraints:
                                  - maxSkew: 1
                                    topologyKey: topology.kubernetes.io/zone
                                    whenUnsatisfiable: ScheduleAnyway
                                    labelSelector:
                                      matchLabels:
                                        app: prometheus
                                    nodeAffinityPolicy: Honor
                                    nodeTaintsPolicy: Honor
                                  - maxSkew: 2
                                    topologyKey: node-role.kubernetes.io/infra
                                    whenUnsatisfiable: ScheduleAnyway
                                    labelSelector:
                                      matchLabels:
                                        app: prometheus
                                    nodeAffinityPolicy: Honor
                                    nodeTaintsPolicy: Honor
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                                retention: 1d
                              alertmanagerMain:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                topologySpreadConstraints:
                                  - maxSkew: 1
                                    topologyKey: topology.kubernetes.io/zone
                                    whenUnsatisfiable: ScheduleAnyway
                                    labelSelector:
                                      matchLabels:
                                        app: prometheus
                                    nodeAffinityPolicy: Honor
                                    nodeTaintsPolicy: Honor
                                  - maxSkew: 2
                                    topologyKey: node-role.kubernetes.io/infra
                                    whenUnsatisfiable: ScheduleAnyway
                                    labelSelector:
                                      matchLabels:
                                        app: prometheus
                                    nodeAffinityPolicy: Honor
                                    nodeTaintsPolicy: Honor
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                                volumeClaimTemplate:
                                  metadata:
                                    name: alertmanager-data
                                  spec:
                                    resources:
                                      requests:
                                        storage: 10Gi
                              telemeterClient:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                                telemeterServerURL: ${TELEMETER_SERVER_URL}
                              prometheusOperator:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                              k8sPrometheusAdapter:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                              kubeStateMetrics:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                              openshiftStateMetrics:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
                              thanosQuerier:
                                nodeSelector:
                                  node-role.kubernetes.io/worker: ""
                                tolerations:
                                  - effect: NoSchedule
                                    key: node-role.kubernetes.io/infra
                                    operator: Exists
        - apiVersion: apps.open-cluster-management.io/v1
          kind: PlacementRule
          metadata:
            name: placement-metrics-forwarder-config-non-uwm
            namespace: openshift-acm-policies
          spec:
            clusterSelector:
              matchExpressions:
                - key: hypershift.open-cluster-management.io/hosted-cluster
                  operator: In
                  values:
                    - "true"
                - key: ext-managed.openshift.io/uwm-disabled
                  operator: In
                  values:
                    - "true"
        - apiVersion: policy.open-cluster-management.io/v1
          kind: PlacementBinding
          metadata:
            name: binding-metrics-forwarder-config-non-uwm
            namespace: openshift-acm-policies
          placementRef:
            apiGroup: apps.open-cluster-management.io
            kind: PlacementRule
            name: placement-metrics-forwarder-config-non-uwm
          subjects:
            - apiGroup: policy.open-cluster-management.io
              kind: Policy
              name: metrics-forwarder-config-non-uwm
