---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    package-operator.run/phase: certman-issuer
  name: metrics-forwarder-ca-issuer
spec:
  ca:
    secretName: root-ca
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    package-operator.run/phase: certman-cert
  name: metrics-forwarder-cert
spec:
  secretName: metrics-forwarder-secret
  secretTemplate:
    labels:
      app: metrics-forwarder

  duration: 25960h
  renewBefore: 360h
  subject:
    organizations:
      - openshift
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  dnsNames:
    - apps.{{ with $x := .package.metadata.namespace }}{{ (splitn "-" 4 $x)._3 }}{{ end }}.hypershift.local
    - localhost
  issuerRef:
    name: metrics-forwarder-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metrics-forwarder-config
  labels:
    app.kubernetes.io/name: metrics-forwarder
  annotations:
    package-operator.run/phase: config
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;
    error_log  /tmp/error.log warn;
    pid        /tmp/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"'
                          ' Proxy: "$proxy_host" "$upstream_addr"';
      access_log  /dev/stdout  main;
      sendfile        on;
      keepalive_timeout  65;
      server {
        listen 8001;
        listen 8003 ssl;

        server_name metrics-forwarder.apps.{{ with $x := .package.metadata.namespace }}{{ (splitn "-" 4 $x)._3 }}{{ end }}.hypershift.local;

        ssl_certificate /etc/nginx/cert/tls.crt;
        ssl_certificate_key  /etc/nginx/cert/tls.key;


        location /healthz {
          return 200;
        }

        location / {
          proxy_pass http://hypershift-monitoring-stack-prometheus.openshift-observability-operator.svc.cluster.local:9090/api/v1/write;
            proxy_buffering off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }
      }
    }
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: metrics-forwarder
  annotations:
    package-operator.run/phase: deploy
spec:
  egress:
    - ports:
        - port: 5353
          protocol: UDP
        - port: 5353
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: openshift-dns
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: openshift-observability-operator
          podSelector: {}
  podSelector:
    matchLabels:
      app: metrics-forwarder
  policyTypes:
    - Egress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-forwarder
  labels:
    app: metrics-forwarder
  annotations:
    package-operator.run/phase: deploy
spec:
  selector:
    matchLabels:
      app: metrics-forwarder
  replicas: 2
  template:
    metadata:
      labels:
        app: metrics-forwarder
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              # Term: Try to match both the required cluster labels if present
              - matchExpressions:
                  - key: hypershift.openshift.io/cluster
                    operator: In
                    values:
                      - '{{.package.metadata.namespace}}'
		  - key: hypershift.openshift.io/request-serving-component
            	    operator: In
                    values:
                      - 'true'
          preferredDuringSchedulingIgnoredDuringExecution:
            # Preference for nodes with both required labels
            - weight: 100
              preference:
                matchExpressions:
                  - key: hypershift.openshift.io/cluster
                    operator: In
                    values:
                      - '{{.package.metadata.namespace}}'
                  - key: hypershift.openshift.io/request-serving-component
                    operator: In
                    values:
                      - 'true'
            - weight: 90
              preference:
                matchExpressions:
                  - key: hypershift.openshift.io/cluster
                    operator: In
                    values:
                      - '{{.package.metadata.namespace}}'
            - weight: 80
              preference:
                matchExpressions:
		  - key: hypershift.openshift.io/request-serving-component
            	    operator: In
                    values:
                      - 'true'
            - weight: 70
              preference:
                matchExpressions:
                  - key: hypershift.openshift.io/control-plane
                    operator: In
                    values:
                      - 'true'
            - weight: 60
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/worker
                    operator: Exists

        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    hypershift.openshift.io/hosted-control-plane: '{{.package.metadata.namespace}}'
                topologyKey: kubernetes.io/hostname
              weight: 100

        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: metrics-forwarder
              topologyKey: topology.kubernetes.io/zone

      automountServiceAccountToken: false
      containers:
        - name: nginx
          image: registry.access.redhat.com/ubi8/nginx-120
          command:
            - nginx
            - '-g'
            - daemon off;
          ports:
            - containerPort: 8001
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - mountPath: /etc/nginx/cert
              name: nginx-cert
      tolerations:
        - effect: NoSchedule
          key: hypershift.openshift.io/control-plane
          operator: Equal
          value: 'true'
        - effect: NoSchedule
          key: hypershift.openshift.io/cluster
          operator: Equal
          value: '{{.package.metadata.namespace}}'
        - effect: NoSchedule
          key: hypershift.openshift.io/request-serving-component
          operator: Equal
          value: 'true'
      volumes:
        - name: nginx-config
          configMap:
            defaultMode: 420
            name: metrics-forwarder-config
        - name: nginx-cert
          secret:
            defaultMode: 420
            secretName: metrics-forwarder-secret
---
apiVersion: v1
kind: Service
metadata:
  name: metrics-forwarder
  annotations:
    package-operator.run/phase: expose
spec:
  selector:
    app: metrics-forwarder
  ports:
    - protocol: TCP
      port: 8003
      targetPort: 8003
      name: nginx
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    hypershift.openshift.io/hosted-control-plane: {{.package.metadata.namespace}}
    hypershift.openshift.io/internal-route: "true"
  annotations:
    package-operator.run/phase: expose
  name: metrics-forwarder
spec:
  host: metrics-forwarder.apps.{{ with $x := .package.metadata.namespace }}{{ (splitn "-" 4 $x)._3 }}{{ end }}.hypershift.local
  tls:
    insecureEdgeTerminationPolicy: None
    termination: passthrough
  port:
    targetPort: 8003
  to:
    kind: Service
    name: metrics-forwarder
    weight: 100
  wildcardPolicy: None
